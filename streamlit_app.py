# -*- coding: utf-8 -*-
"""Untitled1.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1N5MSGHcR0VNR8PWOKCLl1kdaOdB4DWxQ
"""

import streamlit as st
import numpy as np
import tensorflow as tf
from PIL import Image, ImageOps

# === Load the trained model ===
model = tf.keras.models.load_model("mnist_cnn_model.h5")

st.title("üñäÔ∏è Handwritten Digit Recognition")
st.write("Upload an image of a digit (28x28 grayscale or we'll resize it for you).")

# === Upload image ===
uploaded_file = st.file_uploader("Choose an image...", type=["png", "jpg", "jpeg"])

if uploaded_file is not None:
    # Show the uploaded image
    image = Image.open(uploaded_file).convert('L')  # convert to grayscale
    st.image(image, caption='Uploaded Image', use_column_width=True)

    # Preprocess the image
    img = image.resize((28, 28))                     # Resize to 28x28
    img_array = np.array(img)                        # Convert to numpy array
    img_array = 255 - img_array                      # Invert (white background)
    img_array = img_array / 255.0                    # Normalize
    img_array = img_array.reshape(1, 28, 28, 1)      # Add batch and channel dims

    # Predict
    prediction = model.predict(img_array)
    predicted_digit = np.argmax(prediction)

    st.success(f"‚úÖ Predicted Digit: **{predicted_digit}**")